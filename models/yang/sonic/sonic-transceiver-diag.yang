module sonic-transceiver-diag {
    namespace "http://github.com/Azure/sonic-transceiver-diag";
    prefix sxcvrdiag;

    import sonic-port {
        prefix prt;
    }

    import sonic-extension {
        prefix sonic-ext;
    }

    organization
        "SONiC";

    contact
        "SONiC";

    description
        "SONiC Transceiver Diagnostics and Monitoring";

    revision 2020-06-10 {
        description
            "Initial revision.";
    }

    container sonic-transceiver-diag {

        container XCVR {
            sonic-ext:db-name "CONFIG_DB";
            list XCVR_LIST {
                key "ifname";

                leaf ifname {
                    type leafref {
                        path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                    }
                }
                leaf media_side_input_loopback_enable {
                    type string;
                    description "Loopback from TP3 to TP2.";
                }
                leaf host_side_input_loopback_enable {
                    type string;
                    description "Loopback at TP1a.";
                }
            }
        }

        container LOOPBACK_CAP {
            sonic-ext:db-name "STATE_DB";
            config false;
            list LOOPBACK_CAP_LIST {
                key "ifname";
                leaf ifname {
                    type leafref {
                        path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                    }
                    description
                        "Reference of port for which diagnostic capabilites are requested.";
                }
                leaf media_side_output_loopback_support {
                    type string;
                    description "Loopback at TP2.";
                }
                leaf media_side_input_loopback_support {
                    type string;
                    description "Loopback from TP3 to TP2.";
                }
                leaf host_side_output_loopback_support {
                    type string;
                    description "Loopback from TP1a to TP4.";
                }
                leaf host_side_input_loopback_support {
                    type string;
                    description "Loopback at TP1a.";
                }
                leaf simultaneous_host_media_side_loopback_support {
                    type string;
                    description "Simultaneous Host-side and Media-side Loopback.";
                }
                leaf per_lane_host_side_loopback_support {
                    type string;
                    description "Per-lane Host Side Loopback.";
                }
                leaf per_lane_media_side_loopback_support {
                    type string;
                    description "Per-lane Media Side Loopback.";
                }
            }
        }

        container LOOPBACK_CFG {
            list LOOPBACK_CFG_LIST {
                key "ifname";
                leaf ifname {
                    type leafref {
                        path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                    }
                    description
                        "Reference of port on which diagnostics is to be configured.";
                }
                leaf media_side_output_loopback_enable {
                    type string;
                    description "Loopback at TP2.";
                }
                leaf media_side_input_loopback_enable {
                    type string;
                    description "Loopback from TP3 to TP2.";
                }
                leaf host_side_output_loopback_enable {
                    type string;
                    description "Loopback from TP1a to TP4.";
                }
                leaf host_side_input_loopback_enable {
                    type string;
                    description "Loopback at TP1a.";
                }
                leaf simultaneous_host_media_side_loopback_enable {
                    type string;
                    description "Simultaneous Host-side and Media-side Loopback.";
                }
                leaf per_lane_host_side_loopback_enable {
                    type string;
                    description "Per-lane Host Side Loopback.";
                }
                leaf per_lane_media_side_loopback_enable {
                    type string;
                    description "Per-lane Media Side Loopback.";
                }
            }
        }
        container LOOPBACK_STATUS {
            sonic-ext:db-name "STATE_DB";
            config false;
            list LOOPBACK_STATUS_LIST {
                key "ifname";
                leaf ifname {
                    type leafref {
                        path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                    }
                    description
                        "Reference of port for which diagnostics status is requested.";
                }
                leaf media_side_output_loopback_enable {
                    type string;
                    description "Loopback at TP2.";
                }
                leaf media_side_input_loopback_enable {
                    type string;
                    description "Loopback from TP3 to TP2.";
                }
                leaf host_side_output_loopback_enable {
                    type string;
                    description "Loopback from TP1a to TP4.";
                }
                leaf host_side_input_loopback_enable {
                    type string;
                    description "Loopback at TP1a.";
                }
                leaf simultaneous_host_media_side_loopback_enable {
                    type string;
                    description "Simultaneous Host-side and Media-side Loopback.";
                }
                leaf per_lane_host_side_loopback_enable {
                    type string;
                    description "Per-lane Host Side Loopback.";
                }
                leaf per_lane_media_side_loopback_enable {
                    type string;
                    description "Per-lane Media Side Loopback.";
                }
            }
        }
        container sonic-xcvr-op-parms {
            container XCVR_OPER_PARAMS {
                sonic-ext:db-name "STATE_DB";
                config false;
                list OP_PARAMS_LIST {
                    key "ifname";
                    leaf ifname {
                        type leafref {
                            path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                        }
                        description
                            "Reference of port for which LOS status is requested.";
                    }
                    leaf voltage {
                        type string;
                        description "Instantaneous transceiver voltage.";
                    }
                    leaf temperature {
                        type string;
                        description "Instantaneous transceiver temperature.";
                    }
                    leaf rx1los {
                        type string;
                        description "Lane 1 LOS status.";
                    }
                    leaf rx2los {
                        type string;
                        description "Lane 2 LOS status.";
                    }
                    leaf rx3los {
                        type string;
                        description "Lane 3 LOS status.";
                    }
                    leaf rx4los {
                        type string;
                        description "Lane 4 LOS status.";
                    }
                    leaf rx5los {
                        type string;
                        description "Lane 5 LOS status.";
                    }
                    leaf rx6los {
                        type string;
                        description "Lane 6 LOS status.";
                    }
                    leaf rx7los {
                        type string;
                        description "Lane 7 LOS status.";
                    }
                    leaf rx8los {
                        type string;
                        description "Lane 8 LOS status.";
                    }
                    leaf rx1lol {
                        type string;
                        description "Lane 1 LOL status.";
                    }
                    leaf rx2lol {
                        type string;
                        description "Lane 2 LOL status.";
                    }
                    leaf rx3lol {
                        type string;
                        description "Lane 3 LOL status.";
                    }
                    leaf rx4lol {
                        type string;
                        description "Lane 4 LOL status.";
                    }
                    leaf rx5lol {
                        type string;
                        description "Lane 5 LOL status.";
                    }
                    leaf rx6lol {
                        type string;
                        description "Lane 6 LOL status.";
                    }
                    leaf rx7lol {
                        type string;
                        description "Lane 7 LOL status.";
                    }
                    leaf rx8lol {
                        type string;
                        description "Lane 8 LOL status.";
                    }
                    leaf tx1power {
                        type string;
                        description "Lane 1 Tx Power in dBm.";
                    }
                    leaf tx2power {
                        type string;
                        description "Lane 2 Tx Power in dBm.";
                    }
                    leaf tx3power {
                        type string;
                        description "Lane 3 Tx Power in dBm.";
                    }
                    leaf tx4power {
                        type string;
                        description "Lane 4 Tx Power in dBm.";
                    }
                    leaf tx5power {
                        type string;
                        description "Lane 5 Tx Power in dBm.";
                    }
                    leaf tx6power {
                        type string;
                        description "Lane 6 Tx Power in dBm.";
                    }
                    leaf tx7power {
                        type string;
                        description "Lane 7 Tx Power in dBm.";
                    }
                    leaf tx8power {
                        type string;
                        description "Lane 8 Tx Power in dBm.";
                    }
                    leaf rx1power {
                        type string;
                        description "Lane 1 Rx Power in dBm.";
                    }
                    leaf rx2power {
                        type string;
                        description "Lane 2 Rx Power in dBm.";
                    }
                    leaf rx3power {
                        type string;
                        description "Lane 3 Rx Power in dBm.";
                    }
                    leaf rx4power {
                        type string;
                        description "Lane 4 Rx Power in dBm.";
                    }
                    leaf rx5power {
                        type string;
                        description "Lane 5 Rx Power in dBm.";
                    }
                    leaf rx6power {
                        type string;
                        description "Lane 6 Rx Power in dBm.";
                    }
                    leaf rx7power {
                        type string;
                        description "Lane 7 Rx Power in dBm.";
                    }
                    leaf rx8power {
                        type string;
                        description "Lane 8 Rx Power in dBm.";
                    }
                    leaf tx1bias {
                        type string;
                        description "Lane 1 Tx Bias in dBm.";
                    }
                    leaf tx2bias {
                        type string;
                        description "Lane 2 Tx Bias in dBm.";
                    }
                    leaf tx3bias {
                        type string;
                        description "Lane 3 Tx Bias in dBm.";
                    }
                    leaf tx4bias {
                        type string;
                        description "Lane 4 Tx Bias in dBm.";
                    }
                    leaf tx5bias {
                        type string;
                        description "Lane 5 Tx Bias in dBm.";
                    }
                    leaf tx6bias {
                        type string;
                        description "Lane 6 Tx Bias in dBm.";
                    }
                    leaf tx7bias {
                        type string;
                        description "Lane 7 Tx Bias in dBm.";
                    }
                    leaf tx8bias {
                        type string;
                        description "Lane 8 Tx Bias in dBm.";
                    }
                }
            }
        }
    }

    rpc xcvr_diag_loopback_capabilities {

        description "RPC for listing the transceiver diagnostic 
                     loopback capabilities of ports.
                     Input is Ethernet interface.
                     No configuration should change through RPC's.";

        input {
            leaf ifname {
                type leafref {
                    path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                }
            }
        }
        output {

            leaf media_side_output_loopback_support {
                type string;
                description "Loopback at TP2.";
            }
            leaf media_side_input_loopback_support {
                type string;
                description "Loopback from TP3 to TP2.";
            }
            leaf host_side_output_loopback_support {
                type string;
                description "Loopback from TP1a to TP4.";
            }
            leaf host_side_input_loopback_support {
                type string;
                description "Loopback at TP1a.";
            }
            leaf simultaneous_host_media_side_loopback_support {
                type string;
                description "Simultaneous Host-side and Media-side Loopback.";
            }
            leaf per_lane_host_side_loopback_support {
                type string;
                description "Per-lane Host Side Loopback.";
            }
            leaf per_lane_media_side_loopback_support {
                type string;
                description "Per-lane Media Side Loopback.";
            }
        }
    }

    rpc xcvr_op_params {

        description "RPC for gathering per-lane Tx Power, Tx Bias, LOS and Rx Power. 
                     Input is Ethernet interface.
                     No configuration should change through RPC's.";

        input {
            leaf ifname {
                type leafref {
                    path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                }
            }
        }

        output {
            leaf laser_age {
                type string;
                description "0% at BOL, 100% at EOL.";
            }
            leaf voltage {
                type string;
                description "voltage.";
            }
            leaf temperature {
                type string;
                description "temperature.";
            }
            leaf rx1los {
                type string;
                description "LOS.";
            }
            leaf rx2los {
                type string;
                description "LOS.";
            }
            leaf rx3los {
                type string;
                description "LOS.";
            }
            leaf rx4los {
                type string;
                description "LOS.";
            }
            leaf rx5los {
                type string;
                description "LOS.";
            }
            leaf rx6los {
                type string;
                description "LOS.";
            }
            leaf rx7los {
                type string;
                description "LOS.";
            }
            leaf rx8los {
                type string;
                description "LOS.";
            }
            leaf tx1power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx2power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx3power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx4power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx5power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx6power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx7power {
                type string;
                description "Tx power in dBm.";
            }
            leaf tx8power {
                type string;
                description "Tx power in dBm.";
            }
            leaf rx1power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx2power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx3power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx4power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx5power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx6power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx7power {
                type string;
                description "Rx power in dBm.";
            }
            leaf rx8power {
                type string;
                description "Rx power in dBm.";
            }
            leaf tx1bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx2bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx3bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx4bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx5bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx6bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx7bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf tx8bias {
                type string;
                description "Tx bias current in 2 uA.";
            }
            leaf rx1lol {
                type string;
                description "Lane 1 LOL status.";
            }
            leaf rx2lol {
                type string;
                description "Lane 2 LOL status.";
            }
            leaf rx3lol {
                type string;
                description "Lane 3 LOL status.";
            }
            leaf rx4lol {
                type string;
                description "Lane 4 LOL status.";
            }
            leaf rx5lol {
                type string;
                description "Lane 5 LOL status.";
            }
            leaf rx6lol {
                type string;
                description "Lane 6 LOL status.";
            }
            leaf rx7lol {
                type string;
                description "Lane 7 LOL status.";
            }
            leaf rx8lol {
                type string;
                description "Lane 8 LOL status.";
            }
        }
    }
}
